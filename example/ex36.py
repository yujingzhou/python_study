###---coding:UTF-8--
"""
If 语句的规则
1. 每一个“if 语句”必须包含一个else.
2. 如果这个else 永远都不应该被执行到，因为它本身没有任何意义，那你必须在else
语句后面使用一个叫做die 的函数，让它打印出错误信息并且死给你看，这和上一
节的习题类似，这样你可以找到很多的错误。
3. “if 语句”的嵌套不要超过2 层，最好尽量保持只有1 层。这意味着如果你在if 里
边又有了一个if，那你就需要把第二个if 移到另一个函数里面。
4. 将“if 语句”当做段落来对待，其中的每一个if, elif, else 组合就跟一个段落的
句子组合一样。在这种组合的最前面和最后面留一个空行以作区分。
5. 你的布尔测试应该很简单，如果它们很复杂的话，你需要将它们的运算事先放到一
个变量里，并且为变量取一个好名字。
如果你遵循上面的规则，你就会写出比大部分程序员都好的代码来。回到上一个练习
中，看看我有没有遵循这些规则，如果没有的话，就将其改正过来。

循环的规则
1. 只有在循环永不停止时使用“while 循环”，这意味着你可能永远都用不到。这条只
有Python 中成立，其他的语言另当别论。
2. 其他类型的循环都使用“for 循环”，尤其是在循环的对象数量固定或者有限的情况
下。

调试(debug)的小技巧
1. 不要使用“debugger”。Debugger 所作的相当于对病人的全身扫描。你并不会得到某
方面的有用信息，而且你会发现它输出的信息态度，而且大部分没有用，或者只会
让你更困惑。
2. 最好的调试程序的方法是使用print 在各个你想要检查的关键环节将关键变量打印
出来，从而检查哪里是否有错。
3. 让程序一部分一部分地运行起来。不要等一个很长的脚本写完后才去运行它。写一
点，运行一点，再修改一点。
"""
